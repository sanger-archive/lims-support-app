<%
require 'json'
# This step (request) is creating a barcode
create_barcode_step = {:header => [], :response_header => [] }
create_barcode_step[:description] = <<EOD
**Use the create barcode action.**
* `labware` the specific labware the barcode relates to (tube, plate etc..)
* `role` the role of the labware (like 'stock')
* `contents` the type of the aliquot the labware contains (DNA, RNA etc...)
EOD
create_barcode_step[:method] = "POST"
create_barcode_step[:url] = '/actions/create_barcode'
create_barcode_step[:header] << 'Accept: application/json'
create_barcode_step[:setup]=<<EOD
# This is class is generating a fake barcode
# We will use it when we are generating a new sanger barcode.
module Lims::SupportApp
    class FakeBarcode
        def self.new_fake_barcode
            "1233334"
        end
    end
end
EOD
create_barcode_step[:parameters] = <<EOD
{ "create_barcode": {
    "labware": "tube",
    "role": "stock",
    "contents": "DNA"
}}
EOD
create_barcode_step[:status]=200
create_barcode_step[:response_header] << 'Content-Type: application/json'
create_barcode_step[:response]=<<EOD
{ "create_barcode": {
    "actions": {
    },
    "user": "user",
    "application": "application",
    "result": {
        "barcode": {
            "actions": {
                "read": "http://example.org/11111111-2222-3333-4444-555555555555",
                "update": "http://example.org/11111111-2222-3333-4444-555555555555",
                "delete": "http://example.org/11111111-2222-3333-4444-555555555555",
                "create": "http://example.org/11111111-2222-3333-4444-555555555555"
            },
            "uuid": "11111111-2222-3333-4444-555555555555",
            "ean13": "2741233334859",
            "sanger": {
              "prefix": "JD",
              "number": "1233334",
              "suffix": "U"
            }
        },
        "uuid": "11111111-2222-3333-4444-555555555555"
    },
    "labware": "tube",
    "role": "stock",
    "contents": "DNA"
}}
EOD

get_created_barcode_step = {:header => [], :response_header => [] }
get_created_barcode_step[:description] = <<EOD
**Reads the previously created barcode.**
EOD
get_created_barcode_step[:method] = "GET"
get_created_barcode_step[:url] = '/11111111-2222-3333-4444-555555555555'
get_created_barcode_step[:header] << 'Accept: application/json'
get_created_barcode_step[:status]=200
get_created_barcode_step[:response_header] << 'Content-Type: application/json'
get_created_barcode_step[:response]=<<EOD
{ "barcode": {
    "actions": {
        "read": "http://example.org/11111111-2222-3333-4444-555555555555",
        "update": "http://example.org/11111111-2222-3333-4444-555555555555",
        "delete": "http://example.org/11111111-2222-3333-4444-555555555555",
        "create": "http://example.org/11111111-2222-3333-4444-555555555555"
    },
    "uuid": "11111111-2222-3333-4444-555555555555",
    "ean13": "2741233334859",
    "sanger": {
      "prefix": "JD",
      "number": "1233334",
      "suffix": "U"
    }
}}
EOD

example_json = { "steps" => [create_barcode_step, get_created_barcode_step] }
%>
<%= example_json.to_json %>
