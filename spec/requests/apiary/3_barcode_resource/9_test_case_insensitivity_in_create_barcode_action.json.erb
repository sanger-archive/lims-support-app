<%
require 'json'
h = {:header => [], :response_header => [] }
h[:description] = <<EOD
EOD
h[:method] = "POST"
h[:url] = '/actions/create_barcode'
h[:header] << 'Accept: application/json'
h[:setup]=<<EOD
# This is class is generating a fake barcode
# We will use it when we are generating a new sanger barcode.
module Lims::SupportApp
    class FakeBarcode
        def self.new_fake_barcode
            "1233334"
        end
    end
end
EOD
h[:parameters] = <<EOD
{ "create_barcode": {
    "labware": "TuBe",
    "role": "stOcK",
    "contents": "dNa"
}}
EOD
h[:status]=200
h[:response_header] << 'Content-Type: application/json'
h[:response]=<<EOD
{ "create_barcode": {
    "actions": {
    },
    "user": "user",
    "application": "application",
    "result": {
        "barcode": {
            "actions": {
                "read": "http://example.org/11111111-2222-3333-4444-555555555555",
                "update": "http://example.org/11111111-2222-3333-4444-555555555555",
                "delete": "http://example.org/11111111-2222-3333-4444-555555555555",
                "create": "http://example.org/11111111-2222-3333-4444-555555555555"
            },
            "uuid": "11111111-2222-3333-4444-555555555555",
            "ean13": "2741233334859",
            "sanger": {
              "prefix": "JD",
              "number": "1233334",
              "suffix": "U"
            }
        },
        "uuid": "11111111-2222-3333-4444-555555555555"
    },
    "labware": "TuBe",
    "role": "stOcK",
    "contents": "dNa"
}}
EOD
%>
<%= h.to_json %>
