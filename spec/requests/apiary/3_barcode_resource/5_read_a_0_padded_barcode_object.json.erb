<%
require 'json'
h = {:header => [], :response_header => [] }
h[:description] = <<EOD
**Create a barcode for an asset.**

* `labware` the specific labware the barcode relates to (tube, plate etc..)
* `role` the role of the labware (like 'stock')
* `contents` the type of the aliquot the labware contains (DNA, RNA etc...)
EOD
h[:method] = "POST"
h[:url] = '/barcodes'
h[:header] << 'Accept: application/json'
h[:setup]=<<EOD
# This is class is generating a fake barcode
# We will use it when we are generating a new sanger barcode.
module Lims::SupportApp
    class FakeBarcode
        def self.new_fake_barcode
            "0462804"
        end
    end
end
EOD
h[:parameters] = <<EOD
{ "barcode": {
    "labware": "null",
    "role": "stock",
    "contents": "DNA"
}}
EOD
h[:status]=200
h[:response_header] << 'Content-Type: application/json'
h[:response]=<<EOD
{ "barcode": {
    "actions": {
        "read": "http://example.org/11111111-2222-3333-4444-555555555555",
        "update": "http://example.org/11111111-2222-3333-4444-555555555555",
        "delete": "http://example.org/11111111-2222-3333-4444-555555555555",
        "create": "http://example.org/11111111-2222-3333-4444-555555555555"
    },
    "uuid": "11111111-2222-3333-4444-555555555555",
    "ean13": "3820462804780",
    "sanger": {
      "prefix": "ND",
      "number": "0462804",
      "suffix": "N"
    }
}}
EOD
%>
<%= h.to_json %>
