<%
require 'json'
# This step (request) is creating a kit
create_kit_step = {:header => [], :response_header => [] }
create_kit_step[:description] = <<EOD
**Use the create kit action.**
* `process` the title of the specific process the kit relates to
* `aliquotType` the type of the aliquot the kit relates to
* `expires` the expiry date of the kit
* `amount` the amount of the kit
EOD
create_kit_step[:method] = "POST"
create_kit_step[:url] = '/actions/create_kit'
create_kit_step[:header] << 'Accept: application/json'
create_kit_step[:parameters] = <<EOD
{ "create_kit": {
    "process": "DNA & RNA extraction",
    "aliquot_type": "NA+P",
    "expires": "2013-05-01",
    "amount": 10
}}
EOD
create_kit_step[:status]=200
create_kit_step[:response_header] << 'Content-Type: application/json'
create_kit_step[:response]=<<EOD
{ "create_kit": {
    "actions": {
    },
    "user": "user",
    "application": "application",
    "result": {
        "kit": {
            "actions": {
                "read": "http://example.org/11111111-2222-3333-4444-555555555555",
                "update": "http://example.org/11111111-2222-3333-4444-555555555555",
                "delete": "http://example.org/11111111-2222-3333-4444-555555555555",
                "create": "http://example.org/11111111-2222-3333-4444-555555555555"
            },
            "uuid": "11111111-2222-3333-4444-555555555555",
            "process": "DNA & RNA extraction",
            "aliquotType": "NA+P",
            "expires": "2013-05-01",
            "amount": 10
        },
        "uuid": "11111111-2222-3333-4444-555555555555"
    },
    "process": "DNA & RNA extraction",
    "aliquot_type": "NA+P",
    "expires": "2013-05-01",
    "amount": 10
}}
EOD

add_label_step = {:header => [], :response_header => [] }
add_label_step[:description] = <<EOD
**Add a label to an asset.**

* `name` unique identifier of an asset (for example: uuid of a plate)
* `type` type of the object the labellable related (resource, equipment, user etc...)
* `labels` it is a hash which contains the information of the labels.
By labels we mean any readable information found on a physical object.
Label can eventually be identified by a position: an arbitray string (not a Symbol).
It has a value, which can be serial number, stick label with barcode etc.
It has a type, which can be sanger-barcode, 2d-barcode, ean13-barcode etc...
EOD
add_label_step[:method] = "POST"
add_label_step[:url] = '/labellables'
add_label_step[:header] << 'Accept: application/json'
add_label_step[:parameters] = <<EOD
{ "labellable": {
    "name": "11111111-2222-3333-4444-555555555555",
    "type": "resource",
    "labels": {
        "front barcode": {
            "value": "1234567890123",
            "type": "sanger-barcode"
        }
    }
}}
EOD
add_label_step[:status]=200
add_label_step[:response_header] << 'Content-Type: application/json'
add_label_step[:response]=<<EOD
{ "labellable": {
    "actions": {
        "read": "http://example.org/11111111-2222-3333-4444-666666666666",
        "update": "http://example.org/11111111-2222-3333-4444-666666666666",
        "delete": "http://example.org/11111111-2222-3333-4444-666666666666",
        "create": "http://example.org/11111111-2222-3333-4444-666666666666"
    },
    "uuid": "11111111-2222-3333-4444-666666666666",
    "name": "11111111-2222-3333-4444-555555555555",
    "type": "resource",
    "labels": {
        "front barcode": {
            "value": "1234567890123",
            "type": "sanger-barcode"
        }
    }
}}
EOD

get_labelled_kit_step = {:header => [], :response_header => [] }
get_labelled_kit_step[:description] = <<EOD
**Reads the previously created kit.**
EOD
get_labelled_kit_step[:method] = "GET"
get_labelled_kit_step[:url] = '/11111111-2222-3333-4444-555555555555'
get_labelled_kit_step[:header] << 'Accept: application/json'
get_labelled_kit_step[:status]=200
get_labelled_kit_step[:response_header] << 'Content-Type: application/json'
get_labelled_kit_step[:response]=<<EOD
{ "kit": {
    "actions": {
        "read": "http://example.org/11111111-2222-3333-4444-555555555555",
        "update": "http://example.org/11111111-2222-3333-4444-555555555555",
        "delete": "http://example.org/11111111-2222-3333-4444-555555555555",
        "create": "http://example.org/11111111-2222-3333-4444-555555555555"
    },
    "uuid": "11111111-2222-3333-4444-555555555555",
    "process": "DNA & RNA extraction",
    "aliquotType": "NA+P",
    "expires": "2013-05-01",
    "amount": 10,
    "labels": {
        "actions": {
            "read": "http://example.org/11111111-2222-3333-4444-666666666666",
            "create": "http://example.org/11111111-2222-3333-4444-666666666666",
            "update": "http://example.org/11111111-2222-3333-4444-666666666666",
            "delete": "http://example.org/11111111-2222-3333-4444-666666666666"
        },
        "uuid": "11111111-2222-3333-4444-666666666666",
        "front barcode": {
            "value": "1234567890123",
            "type": "sanger-barcode"
        }
    }
}}
EOD

example_json = { "steps" => [create_kit_step, add_label_step, get_labelled_kit_step] }
%>
<%= example_json.to_json %>
